AWSTemplateFormatVersion: '2010-09-09'
Resources:
  StopRDSLambdaFunction:
    Type: 'AWS::Lambda::Function'
    Properties:
      Handler: 'stop_rds.lambda_handler'
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        ZipFile: |
          import boto3

          def lambda_handler(event, context):
              rds = boto3.client('rds')
              # 全RDSインスタンスを取得
              instances = rds.describe_db_instances()
              instance_ids = []

              for instance in instances['DBInstances']:
                  # タグを確認
                  tags = rds.list_tags_for_resource(ResourceName=instance['DBInstanceArn'])
                  tag_dict = {tag['Key']: tag['Value'] for tag in tags['TagList']}
                  if tag_dict.get('auto_shutdown') == 'true':
                      instance_ids.append(instance['DBInstanceIdentifier'])
              
              if instance_ids:
                  for instance_id in instance_ids:
                      rds.stop_db_instance(DBInstanceIdentifier=instance_id)
                  print(f'Stopped your RDS instances: {instance_ids}')
              else:
                  print('No RDS instances to stop')
      Runtime: 'python3.8'
      Timeout: 30

  LambdaExecutionRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: 'Allow'
            Principal:
              Service: 'lambda.amazonaws.com'
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: 'RDSStopPolicy'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: 'Allow'
                Action:
                  - 'rds:StopDBInstance'
                  - 'rds:DescribeDBInstances'
                  - 'rds:ListTagsForResource'
                Resource: '*'

  StopRDSEventRule:
    Type: 'AWS::Events::Rule'
    Properties:
      ScheduleExpression: 'cron(0 23 * * ? *)'  # JST 8時はUTC 23時
      Targets:
        - Arn: !GetAtt StopRDSLambdaFunction.Arn
          Id: 'StopRDSLambdaFunctionTarget'

  PermissionForEventsToInvokeLambda:
    Type: 'AWS::Lambda::Permission'
    Properties:
      FunctionName: !Ref StopRDSLambdaFunction
      Action: 'lambda:InvokeFunction'
      Principal: 'events.amazonaws.com'
      SourceArn: !GetAtt StopRDSEventRule.Arn